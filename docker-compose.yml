version: '3.4'

services:

  zookeeper:
    hostname: zookeeper
    container_name: zookeeper
    # image: zookeeper:3.4.9
    image: wurstmeister/zookeeper:3.4.6
    restart: always
    ports:
      - "2181:2181"
    # environment:
    #   ZOO_MY_ID: 1
    #   ZOO_PORT: 2181
    #   ZOO_SERVERS: server.1=zookeeper:2888:3888

  kafka:
    hostname: kafka
    container_name: kafka
    # image: confluentinc/cp-kafka:5.5.1
    image: wurstmeister/kafka:2.13-2.8.1
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    healthcheck:
      test: "/opt/kafka/bin/kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --list"
      start_period: 0s
      interval: 30s
      timeout: 2m
      retries: 10
    environment:
      KAFKA_CREATE_TOPICS: "sarama_topic:2:1,queue_in:2:1,queue_out:2:1"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      # KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      # KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      # KAFKA_BROKER_ID: 1
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
